<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>bluesky-boot-dependencies</artifactId>
	<packaging>pom</packaging>
	<parent>
		<groupId>net.luversof.boot</groupId>
		<artifactId>bluesky-boot-build</artifactId>
		<version>${bluesky-boot.version}</version>
	</parent>
	<properties>
		<java.version>11</java.version>
		<spring-boot.version>2.3.3.RELEASE</spring-boot.version>
		<spring-cloud.version>Hoxton.SR7</spring-cloud.version>

		<asciidoctor.maven.plugin.version>1.6.0</asciidoctor.maven.plugin.version>
		<spring-doc-resources.version>0.2.2.RELEASE</spring-doc-resources.version>
		<spring-asciidoctor-extensions.version>0.4.3.RELEASE</spring-asciidoctor-extensions.version>
		<refdocs.build.directory>${project.build.directory}/refdocs/</refdocs.build.directory>
		<asciidocs.output.directory>${project.build.directory}/generated-docs</asciidocs.output.directory>
	</properties>
	<dependencyManagement>
		<dependencies>
			<!-- (s) spring boot -->
			<dependency>
				<groupId>net.luversof.boot</groupId>
				<artifactId>bluesky-boot</artifactId>
				<version>${bluesky-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>net.luversof.boot</groupId>
				<artifactId>bluesky-boot-autoconfigure</artifactId>
				<version>${bluesky-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>net.luversof.boot</groupId>
				<artifactId>bluesky-boot-starter</artifactId>
				<version>${bluesky-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>net.luversof.boot</groupId>
				<artifactId>bluesky-boot-starter-batch</artifactId>
				<version>${bluesky-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>net.luversof.boot</groupId>
				<artifactId>bluesky-boot-starter-data-jpa</artifactId>
				<version>${bluesky-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>net.luversof.boot</groupId>
				<artifactId>bluesky-boot-starter-data-mongodb-reactive</artifactId>
				<version>${bluesky-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>net.luversof.boot</groupId>
				<artifactId>bluesky-boot-starter-data-rest</artifactId>
				<version>${bluesky-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>net.luversof.boot</groupId>
				<artifactId>bluesky-boot-starter-jdbc</artifactId>
				<version>${bluesky-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>net.luversof.boot</groupId>
				<artifactId>bluesky-boot-starter-mybatis</artifactId>
				<version>${bluesky-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>net.luversof.boot</groupId>
				<artifactId>bluesky-boot-starter-test</artifactId>
				<version>${bluesky-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>net.luversof.boot</groupId>
				<artifactId>bluesky-boot-docs</artifactId>
				<version>${bluesky-boot.version}</version>
			</dependency>
			<!-- (e) spring boot -->

			<!-- (s) spring cloud -->
			<!-- 버전관리를 편하게 하려고 cloud 의존성을 여기서 관리하고 있으나 분리하는 것이 좋다. -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- (e) spring cloud -->


			<!-- (s) mybatis -->
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>2.1.3</version>
			</dependency>
			<!-- (e) mybatis -->

			<!-- (s) boot-admin -->
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-starter-server</artifactId>
				<version>2.2.4</version>
			</dependency>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-starter-client</artifactId>
				<version>2.2.4</version>
			</dependency>
			<!-- (e) boot-admin -->

			<!-- (s) thymeleaf-layout-dialect -->
			<dependency>
				<groupId>com.github.zhanhb</groupId>
				<artifactId>thymeleaf-layout-dialect</artifactId>
				<version>2.4.1</version>
			</dependency>
			<!-- (e) thymeleaf-layout-dialect -->

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<!-- <profiles> <profile> <id>dockerdev</id> <repositories> <repository> 
		<id>bluesky-docker-nexus</id> <url>http://nexus:8081/repository/maven-public/</url> 
		<releases> <enabled>true</enabled> </releases> <snapshots> <enabled>true</enabled> 
		<updatePolicy>always</updatePolicy> </snapshots> </repository> </repositories> 
		<distributionManagement> <repository> <id>bluesky-releases</id> <url>http://nexus:8081/repository/maven-releases/</url> 
		</repository> <snapshotRepository> <id>bluesky-snapshots</id> <url>http://nexus:8081/repository/maven-snapshots/</url> 
		</snapshotRepository> </distributionManagement> </profile> </profiles> <pluginRepositories> 
		<pluginRepository> <id>spring-snapshots</id> <url>http://repo.spring.io/snapshot</url> 
		</pluginRepository> <pluginRepository> <id>spring-milestones</id> <url>http://repo.spring.io/milestone</url> 
		</pluginRepository> </pluginRepositories> -->

	<profiles>
		<profile>
			<id>asciidoctor</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack-doc-resources</id>
								<goals>
									<goal>unpack-dependencies</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<includeGroupIds>io.spring.docresources</includeGroupIds>
									<includeArtifactIds>spring-doc-resources</includeArtifactIds>
									<includeTypes>zip</includeTypes>
									<excludeTransitive>true</excludeTransitive>
									<outputDirectory>${refdocs.build.directory}</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-asciidoc-resources</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${refdocs.build.directory}</outputDirectory>
									<resources>
										<resource>
											<directory>src/main/asciidoc</directory>
											<filtering>false</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<sourceDirectory>${refdocs.build.directory}</sourceDirectory>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>${asciidoctor.maven.plugin.version}</version>
						<dependencies>
							<dependency>
								<groupId>org.springframework.restdocs</groupId>
								<artifactId>spring-restdocs-asciidoctor</artifactId>
								<version>${spring-restdocs.version}</version>
							</dependency>
							<dependency>
								<groupId>io.spring.asciidoctor</groupId>
								<artifactId>spring-asciidoctor-extensions-block-switch</artifactId>
								<version>${spring-asciidoctor-extensions.version}</version>
							</dependency>
							<dependency>
								<groupId>io.spring.asciidoctor</groupId>
								<artifactId>spring-asciidoctor-extensions-spring-boot</artifactId>
								<version>${spring-asciidoctor-extensions.version}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>asciidoc-to-html</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${refdocs.build.directory}</sourceDirectory>
									<backend>html5</backend>
									<sourceHighlighter>highlight.js</sourceHighlighter>
									<preserveDirectories>true</preserveDirectories>
									<outputDirectory>${asciidocs.output.directory}</outputDirectory>
									<attributes>
										// these attributes are required to use the doc resources
										<docinfo>shared</docinfo>
										<stylesdir>css/</stylesdir>
										<stylesheet>spring.css</stylesheet>
										<linkcss>true</linkcss>
										<icons>font</icons>
										<highlightjsdir>js/highlight</highlightjsdir>
										<highlightjs-theme>github</highlightjs-theme>
									</attributes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>
	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<url>http://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<url>http://repo.spring.io/milestone</url>
		</repository>
		<repository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/release</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<url>http://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<url>http://repo.spring.io/milestone</url>
		</pluginRepository>
		<pluginRepository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/release</url>
		</pluginRepository>
	</pluginRepositories>
</project>